#encoding: utf-8
I. Подключение JS
app.js 								# создать фаил (обычно в папке public)
<script src="/app.js"></script> 	# добавить в layout (прописать путь где находится)
************************************************************************************************************
************************************************************************************************************


II. Определения
function something() 							// создать функцию (def)
onclick="add_to_cart()" 						#  вызвать по клику кнопки функцию (.erb)
onclick="add_to_cart(<%= p.id %>) 				#  вызвать по клику кнопки функцию, с параметром (<%=  %>) (.erb)
var x = 1;										// задать переменную
var x = window.localStorage.getItem(key); 		// создали переменную x как hash, с заданным параметром key  ???
window.localStorage.setItem('aaa', x); 			// вызвать хеш hh['aaa'] = x 	???
var key = window.localStorage.key(i); 			// получаем ключ
var value = window.localStorage.getItem(key); 	// получаем значение, fаналог ruby: hh[key] = x
if(key.indexOf('product_') == 0) 				// возвращает номер позиции в строке, с которой начинается это выражение
++ 												// увелечение значения на +1
*1 												// делает со строки integer
************************************************************************************************************
************************************************************************************************************



III. Правила, отличаи от Ruby

************************************ # сравнение ruby & java
def something			# ruby
	puts 'Hello!'
end
	###		###
function something()	// java
{
	alert('Hello!');
}


************************************ # пример рефакторинга
function something() 	// пример неправильной функции (если конечно не хочешь string)
{
	alert(x);			// по умолчанию, все переменные - string
	x = x + 1;			// !!НЕ ВЕРНЫЙ КОД, он тут будет прибавлять к строке + 1!!
	x = x * 1 + 1;		// верный код! (x*1) делает со строки integer
}
	# после рефакторинга !!!!!!!

function add_to_cart(id) 						// пример хорошего кода
{
	var key = 'product_' + id; 					// создали переменную key со значением ...
	var x = window.localStorage.getItem(key); 	// создали переменную x как hash, с заданным параметром key

	x = x * 1 + 1; 								// сделали переменную x - integer

	window.localStorage.setItem(key, x); 		// добавили в хеш value в конкретный key
}


************************************ # создание функции
function something()
{
	var x = window.localStorage.getItem('aaa'); 	// x = hh['aaa']

	x = x * 1 + 1; 									// верный код! (x*1) делает со строки integer

	window.localStorage.setItem('aaa', x); 			// hh['aaa'] = x

	alert(x);
}


************************************ # разбор функции
function cart_get_number_of_items()
{
	var cnt = 0; 											// создали переменную, считающая товары

	for(var i = 0; i < window.localStorage.length; i++)
	{
		 var key = window.localStorage.key(i); 				// получаем ключ
		 var value = window.localStorage.getItem(key); 		// получаем значение, fаналог ruby: hh[key] = x

		 if(key.indexOf('product_') == 0) 					// возвращает номер позиции в строке, с которой начинается это выражение
		 {
		 	cnt = cnt + value * 1 ;
		 }
	}

	return cnt;
}
************************************************************************************************************
************************************************************************************************************



P.S.
localStorage 			# в консоли браузера, выведет что туда записалось
localStorage.clear() 	# очистить localStorage